{"version":3,"sources":["mini-examples/1.Counter.js","mini-examples/1.HelloTwoStore.js","mini-examples/2.NameCounter.js","mini-examples/3.TableControlsAsync.js","mini-examples/4.AnimalAutorun.js","mini-examples/6.StoreContext.js","mini-examples/5.BookInject.js","mini-examples/5.BirdInject.js","containers/examples.container.jsx","helpers/store-context.helper.jsx","helpers/use-enter.helper.js","components/todo-new.component.jsx","components/todo-list.component.jsx","components/todo-item.component.jsx","store/todo-item.store.js","helpers/random-id.helper.js","containers/todo.container.jsx","store/todo-list.store.js","app.jsx","index.js"],"names":["counterState","observable","count","increment","this","decrement","observer","props","className","store","onClick","data","value","clickedCount","makeObservable","add","action","hasBeenClicked","computed","console","log","todoStore","title","done","makeAutoObservable","GridRow","toString","TodoView","todo","toJS","firstName","age","nickName","name","Row","devsList","id","sp","filter","totalSum","topPerformer","filteredDevelopers","clearList","addDeveloper","updateFilter","getUser","bound","getUserFlow","flow","reduce","sum","maxSp","Math","max","map","find","matchesFilter","RegExp","test","dev","push","fetch","then","res","json","results","login","dob","fetchUser","uuid","first","runInAction","response","giraffe","key","prompt","parseInt","onChange","target","energyLevel","when","isVisible","dispose","autorun","delay","isHungry","reaction","animalStore","reduceEnergy","Component","addBook","book","books","removeBook","index","splice","inject","booksStore","useState","newBook","setNewBook","type","e","addBird","bird","birds","length","BirdStore","color","birdInput","handleSubmit","preventDefault","reset","birdCount","onSubmit","ref","input","placeholder","style","background","StoreContext","user","userId","website","email","setUser","updateUser","clearUser","setTitle","undefined","React","createContext","useStore","useContext","href","rel","margin","fontSize","configure","enforceActions","StoreProvider","Provider","onEnterPress","callback","event","TodoNew","todoListStore","setTodo","addTodo","onKeyDown","TodoList","openTodos","finishedTodos","TodoItem","text","setText","edit","setEdit","saveText","updateText","defaultValue","defaultChecked","isDone","toggleIsDone","htmlFor","removeTodo","TodoItemStore","Date","now","random","substr","toUpperCase","todos","list","indexTodo","indexOf","forEach","shallow","TodoContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.162ff3a3.chunk.js","sourcesContent":["import React from 'react';\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\n\nexport const counterState = observable({\n\tcount: 0,\n});\n\ncounterState.increment = function() {\n\tthis.count++;\n};\n\ncounterState.decrement = function() {\n\tthis.count--;\n};\n\n\n\nexport const Counter = observer((props) => {\n\tconst handleIncrement = () => { props.store.increment() };\n\tconst handleDecrement = () => { props.store.decrement() };\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t\n\t\t\t<h1>{ props.store.count }</h1>\n\t\t\t\n\t\t\t<button onClick={ handleDecrement }>-1</button>\n\t\t\t<button onClick={ handleIncrement }>+1</button>\n\t\t</div>\n\t);\n})\n\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable, computed, action, makeObservable, makeAutoObservable, toJS } from 'mobx';\n\n\n\nclass HelloStore {\n\tclickedCount\n\t\n\tconstructor(value = 1) {\n\t\tthis.clickedCount = value;\n\t\t\n\t\tmakeObservable(this, {\n\t\t\tclickedCount: observable,\n\t\t\tadd: action,\n\t\t\thasBeenClicked: computed,\n\t\t})\n\t}\n\t\n\t\n\tadd() {\n\t\tthis.clickedCount++;\n\t}\n\t\n\tget hasBeenClicked() {\n\t\tconsole.log('called');\n\t\treturn this.clickedCount > 0;\n\t}\n}\n\nconst data = new HelloStore(0);\n\n\nclass TodoStore {\n\ttitle;\n\tdone;\n\t\n\tconstructor() {\n\t\tthis.title = \"test\"\n\t\tthis.done = true\n\t\t\n\t\tmakeAutoObservable(this)\n\t}\n}\nconst todoStore = new TodoStore();\n\n\n\nconst GridRow = (props) => {\n\treturn(\n\t\t<div>\n\t\t\t<h2>{ props.data.title }</h2>\n\t\t\t<p>{ props.data.done.toString() }</p>\n\t\t</div>\n\t)\n}\n\nconst TodoView = observer(({ todo }) => {\n// WRONG: GridRow won't pick up changes in todo.title / todo.done since it isn't an observer.\n// return <GridRow data={todo} />\n\n// CORRECT: let `TodoView` detect relevant changes in `todo`, and pass plain data down.\n// return <GridRow data={{\n//   title: todo.title,\n//   done: todo.done\n// }} />\n\n// CORRECT: using `toJS` works as well, but being explicit is typically better.\n\treturn <GridRow data={ toJS(todo) }/>\n})\n\n\n\n\nconst TodoComponent = () => {\n\treturn (\n\t\t<>\n\t\t\t<button onClick={ () => data.add() }>\n\t\t\t\tClick count = { data.clickedCount}\n\t\t\t</button>\n\t\t\t{\n\t\t\t\tdata.hasBeenClicked\n\t\t\t\t&& <div>You have clicked the button!</div>\n\t\t\t}\n\t\t\n\t\t\t\n\t\t\t<TodoView todo={ todoStore }/>\n\t\t</>\n\t);\n}\n\nexport default observer(TodoComponent);\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { observable, action, computed } from \"mobx\";\n\n\nexport const nameStore = observable({\n\tfirstName: 'John',\n\tage: 30,\n\t\n\tget nickName() {\n\t\tconsole.log('Generate nickName!');\n\t\treturn `${ this.firstName } - ${ this.age }`;\n\t},\n\t\n\tincrement() { this.age++ },\n\tdecrement() { this.age-- },\n}, {\n\t// указываем что внутренние свойства являются action\n\t// имена в консоли при отладке для каждого action\n\tnickName: computed,\n\tincrement: action('Plus one'),\n\tdecrement: action('Minus one'),\n});\n\n\nexport const NameCounter = observer((props) => {\n\tconst handleIncrement = () => { props.name.increment() };\n\tconst handleDecrement = () => { props.name.decrement() };\n\t\n\treturn (\n\t\t<Fragment>\n\t\t\t{ props.name.nickName }\n\t\t\t\n\t\t\t<button onClick={ handleDecrement }>-1</button>\n\t\t\t<button onClick={ handleIncrement }>+1</button>\n\t\t</Fragment>\n\t)\n})","import React from 'react';\nimport { action, computed, observable, makeObservable, runInAction, flow } from 'mobx';\nimport { observer } from \"mobx-react\";\n\n\n\nclass Store {\n\tdevsList;\n\tfilter;\n\t\n\tconstructor() {\n\t\tthis.devsList = [\n\t\t\t{ id: 1, name: \"Jack\", sp: 12 },\n\t\t\t{ id: 2, name: \"Max\", sp: 10 },\n\t\t\t{ id: 3, name: \"Leo\", sp: 8 },\n\t\t];\n\t\tthis.filter = \"\";\n\t\t\n\t\tmakeObservable(this, { // описываем все свойства отдельно\n\t\t\tdevsList: observable,\n\t\t\tfilter: observable,\n\t\t\ttotalSum: computed,\n\t\t\ttopPerformer: computed,\n\t\t\tfilteredDevelopers: computed,\n\t\t\tclearList: action,\n\t\t\taddDeveloper: action,\n\t\t\tupdateFilter: action,\n\t\t\tgetUser: action.bound,\n\t\t\tgetUserFlow: flow\n\t\t})\n\t}\n\t\n\t\n\tget totalSum() {\n\t\treturn this.devsList.reduce((sum, { sp }) => sum += sp, 0);\n\t};\n\t\n\tget topPerformer() {\n\t\tconst maxSp = Math.max(...this.devsList.map(({ sp }) => sp));\n\n\t\treturn this.devsList.find(({ sp, name }) => {\n\t\t\tif (maxSp === sp) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t};\n\t\n\tget filteredDevelopers() {\n\t\tconst matchesFilter = new RegExp(this.filter, \"i\");\n\t\t\n\t\treturn this.devsList.filter(({ name }) => !this.filter || matchesFilter.test(name));\n\t}\n\t\n\tclearList() {\n\t\tthis.devsList = [];\n\t};\n\t\n\taddDeveloper(dev) {\n\t\tthis.devsList.push(dev);\n\t};\n\t\n\tupdateFilter(value) {\n\t\tthis.filter = value;\n\t}\n\t\n\treset() {\n\t\tthis.clearList();\n\t\tthis.filter = '';\n\t}\n\t\n\tgetUser() {\n\t\tfetch('https://randomuser.me/api/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tif(json.results) {\n\t\t\t\t\tconst { name, login, dob } = json.results[ 0 ]\n\t\t\t\t\tconst fetchUser = { id: login.uuid, name: name.first, sp: dob.age  };\n\t\t\t\t\t\n\t\t\t\t\t// this.addDeveloper(fetchUser) // ок работает\n\t\t\t\t\t\n\t\t\t\t\trunInAction(() => { // ок. Если не хотим выносить логику в отдельный action то используем встроенный runInAction\n\t\t\t\t\t\tthis.devsList.push(fetchUser);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\t\n\t*getUserFlow() {\n\t\tconst response = yield fetch('https://randomuser.me/api/')\n\t\tconst json = yield response.json()\n\t\t\n\t\tif(json.results) {\n\t\t\tconst { name, login, dob } = json.results[ 0 ]\n\t\t\tconst fetchUser = { id: login.uuid, name: name.first, sp: dob.age  };\n\t\t\t\n\t\t\t// this.addDeveloper(fetchUser) // ок работает\n\t\t\t\n\t\t\trunInAction(() => { // ок. Если не хотим выносить логику в отдельный action то используем встроенный runInAction\n\t\t\t\tthis.devsList.push(fetchUser);\n\t\t\t})\n\t\t}\n\t}\n}\n\n\nexport const appStore = new Store();\n\n/*****/\n\nconst Row = ({ data: { name, sp } }) => {\n\treturn (\n\t\t<tr>\n\t\t\t<td>{name}</td>\n\t\t\t<td>{sp}</td>\n\t\t</tr>\n\t);\n};\n\nexport const TableControls = observer((props) => {\n\tconst { store } = props;\n\t\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<td>Name:</td>\n\t\t\t\t<td>SP:</td>\n\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t{\n\t\t\t\tstore.filteredDevelopers.map((dev) =>\n\t\t\t\t\t<Row key={ dev.id } data={ dev } />)\n\t\t\t}\n\t\t\t</tbody>\n\t\t\t<tfoot>\n\t\t\t<tr>\n\t\t\t\t<td>Team SP:</td>\n\t\t\t\t<td>{ store.totalSum }</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Top Performer:</td>\n\t\t\t\t<td>{\n\t\t\t\t\tstore.topPerformer\n\t\t\t\t\t\t? store.topPerformer.name\n\t\t\t\t\t\t: ''\n\t\t\t\t}</td>\n\t\t\t</tr>\n\t\t\t</tfoot>\n\t\t</table>\n\t);\n})\n\n/*****/\n\nexport const Controls = observer((props) => {\n\tconst addDeveloper = () => {\n\t\tconst name = prompt(\"The name:\");\n\t\tconst sp = parseInt(prompt(\"The story points:\"), 10);\n\t\t\n\t\tprops.store.addDeveloper({ name, sp });\n\t}\n\t\n\tconst clearList = () => { props.store.clearList() }\n\t\n\tconst filterDevelopers = ({ target: { value } }) => {\n\t\tprops.store.updateFilter(value);\n\t}\n\t\n\treturn (\n\t\t<div className=\"controls\">\n\t\t\t<button onClick={ clearList }>Clear table</button>\n\t\t\t<button onClick={ addDeveloper }>Add record</button>\n\t\t\t<button onClick={ props.store.getUser }>Get User Async</button>\n\t\t\t<button onClick={ () => props.store.getUserFlow() }>Get User Flow</button>\n\t\t\t<input value={ props.store.filter } onChange={ filterDevelopers } />\n\t\t</div>\n\t);\n})","import React from \"react\";\nimport { makeAutoObservable, autorun, when, reaction } from \"mobx\";\nimport { observer } from \"mobx-react\";\n\n\nclass Animal {\n\tname\n\tenergyLevel\n\t\n\tconstructor(name) {\n\t\tthis.name = name\n\t\tthis.energyLevel = 100\n\t\t\n\t\tmakeAutoObservable(this);\n\t\t\n\t\t// полезно чтобы отменять наблюдения после определенных событий\n\t\twhen(\n\t\t\t() => this.energyLevel < -10, // когда вернет true\n\t\t\t() => { console.log('when: Count value is more than -10') } // отработает второй аргумент when. Перестанет наблюдаться когда выполниться первый раз\n\t\t);\n\t\t\n\t\twhen(\n\t\t\t// Once...\n\t\t\t() => this.isVisible,\n\t\t\t// ... then.\n\t\t\t() => this.dispose()\n\t\t)\n\t}\n\t\n\treduceEnergy() {\n\t\tthis.energyLevel -= 10\n\t}\n\t\n\tdispose() {\n\t\tthis.energyLevel = 100\n\t}\n\t\n\tget isHungry() {\n\t\treturn this.energyLevel < 50\n\t}\n\t\n\tget isVisible() {\n\t\t// Indicate whether this item is visible.\n\t\treturn this.energyLevel < -20\n\t}\n\t\n}\n\nconst giraffe = new Animal(\"Gary\")\n\n// Это необходимо для таких ситуаций, как ведение журнала, сохранение или обновление пользовательского интерфейса кода.\n// запускается 1 раз сразу и каждый раз когда изменяется одна из ее зависимостей\nautorun(() => {\n\t\tconsole.log(\"autorun 1: Energy level with delay:\", giraffe.energyLevel)\n\t},\n\t{ // настройки не обязательны\n\t\tname: 'Custom async autorun', // имя для дебага\n\t\tdelay: 3000, // задержка перед вызовом\n\t})\n\nautorun(() => {\n\tif (giraffe.isHungry) {\n\t\tconsole.log(\"autorun: Now I'm hungry!\")\n\t} else {\n\t\tconsole.log(\"autorun: I'm not hungry!\")\n\t}\n})\n\n// принимает данные за изменением которых следит\n// после изменения данных вызывает callback function\n// отрабатывает каждый раз когда отрабатывает отслеживаемая функция / данные\nreaction(\n\t() => giraffe.isHungry,\n\tisHungry => {\n\t\tif (isHungry) {\n\t\t\tconsole.log(\"reaction: Now I'm hungry!\")\n\t\t} else {\n\t\t\tconsole.log(\"reaction: I'm not hungry!\")\n\t\t}\n\t\t\n\t\tconsole.log(\"reaction: Energy level:\", giraffe.energyLevel)\n\t}\n)\n\n\nconst AnimalCounter = observer((props) => {\n\tconst { name, energyLevel, isHungry } = props.animalStore;\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h3>{ name }</h3>\n\t\t\t<p>{ energyLevel }</p>\n\t\t\t<p>{ isHungry.toString() }</p>\n\t\t\t<button onClick={ () => props.animalStore.reduceEnergy() }>Click</button>\n\t\t</div>\n\t)\n})\n\nexport {\n\tgiraffe,\n\tAnimalCounter\n}","import React from \"react\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\n\n/* Store start */\nclass Store {\n\tconstructor() {\n\t\tthis.title = \"Coding is Love\";\n\t\t\n\t\tthis.user = {\n\t\t\tuserId: 1,\n\t\t\tname: \"Ranjith kumar V\",\n\t\t\twebsite: \"https://codingislove.com\",\n\t\t\temail: \"ranjith@codingislove.com\",\n\t\t};\n\t\t\n\t\tmakeObservable(this, {\n\t\t\ttitle: observable,\n\t\t\tuser: observable,\n\t\t\t\n\t\t\tsetUser: action,\n\t\t\tupdateUser: action,\n\t\t\tclearUser: action,\n\t\t\tsetTitle: action\n\t\t});\n\t}\n\t\n\tsetUser(user) {\n\t\tthis.user = user;\n\t}\n\t\n\tupdateUser(data) {\n\t\tthis.user = { ...this.user, ...data };\n\t}\n\t\n\tclearUser() {\n\t\tthis.user = undefined;\n\t}\n\t\n\tsetTitle(title) {\n\t\tthis.title = title;\n\t}\n}\n\nexport const store = new Store();\n/* Store end */\n\n/* Store helpers */\nconst StoreContext = React.createContext();\n\nexport const StoreProvider = ({ children, store }) => {\n\treturn (\n\t\t<StoreContext.Provider value={ store }>{ children }</StoreContext.Provider>\n\t);\n};\n\n/* Hook to use store in any functional component */\nexport const useStore = () => React.useContext(StoreContext);\n\n/* HOC to inject store to any functional or class component */\nexport const withStore = (Component) => (props) => {\n\treturn <Component { ...props } store={ useStore() } />;\n};\n\n\n\n\nexport const Home = withStore(observer((props) => {\n\tconst { store } = props;\n\t\n\tconst toggleTitle = () => {\n\t\tif (store.title === \"Coding is Love\") {\n\t\t\tstore.setTitle(\"Mobx React Context\");\n\t\t} else {\n\t\t\tstore.setTitle(\"Coding is Love\");\n\t\t}\n\t};\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\thref=\"https://codingislove.com\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\t{ store.title }\n\t\t\t\t</a>\n\t\t\t\t<button onClick={ toggleTitle } style={{ margin: 20 }}>\n\t\t\t\t\tToggle title\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t</div>\n\t);\n}))\n\n\n// useStore hook for functional components\nexport const Username = observer(() => {\n\tconst store = useStore();\n\t\n\treturn <div style={{ fontSize: 14 }}>- By { store.user.name }</div>;\n});\n","import React, { useState } from \"react\";\nimport { action, makeObservable, observable } from 'mobx';\nimport { inject, observer } from \"mobx-react\";\n\n\nclass BooksStore {\n\tconstructor() {\n\t\tthis.books = [];\n\t\t\n\t\tmakeObservable(this, {\n\t\t\tbooks: observable,\n\t\t\taddBook: action,\n\t\t\tremoveBook: action\n\t\t});\n\t}\n\t\n\taddBook = (book) => {\n\t\tthis.books.push(book)\n\t}\n\t\n\tremoveBook = (index) => {\n\t\tthis.books.splice(index, 1)\n\t}\n}\n\nexport const booksStore = new BooksStore();\n\n\nexport const BooksContainer = inject([ \"booksStore\" ])(observer(({ booksStore }) => {\n\tconst [ newBook, setNewBook ] = useState('');\n\t\n\tconst addNewBook = () => {\n\t\tif (!newBook) return;\n\t\t\n\t\tbooksStore.addBook(newBook);\n\t\t\n\t\tsetNewBook(\"\");\n\t}\n\t\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tbooksStore.books.map((book, index) => (\n\t\t\t\t\t<h1\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tonClick={ () => booksStore.removeBook(index) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ book }\n\t\t\t\t\t</h1>\n\t\t\t\t))\n\t\t\t}\n\t\t\t\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={ newBook }\n\t\t\t\tonChange={ (e) => setNewBook(e.target.value) }\n\t\t\t/>\n\t\t\t<button onClick={ addNewBook }>add</button>\n\t\t</div>\n\t)\n\t\n}));","import React from \"react\";\nimport { action, makeAutoObservable } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\n\n\nclass BirdStore {\n\tconstructor() {\n\t\tthis.birds = [ 1,4,5 ];\n\t\t\n\t\tmakeAutoObservable(this);\n\t}\n\t\n\tget birdCount() {\n\t\treturn this.birds.length;\n\t}\n\t\n\taddBird = bird => {\n\t\tthis.birds.push(bird);\n\t\tconsole.log(bird, this.birds)\n\t};\n}\n\nexport const singletonBird = new BirdStore();\n\n\n\nexport const Birds = inject(\"BirdStore\", \"color\")(observer((props) => {\n\tconst { BirdStore, color } = props;\n\t\n\tlet birdInput = null;\n\t\n\tconst handleSubmit = action(e => {\n\t\te.preventDefault();\n\t\t\n\t\tconst value = birdInput.value;\n\t\t\n\t\tprops.BirdStore.addBird(value);\n\t\t\n\t\te.target.reset();\n\t});\n\t\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h2>You have { BirdStore.birdCount } birds</h2>\n\t\t\t\n\t\t\t<form onSubmit={ e => handleSubmit(e) }>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={ input => birdInput = input }\n\t\t\t\t\tplaceholder=\"Add a bird\"\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t\n\t\t\t<ul>\n\t\t\t\t{ BirdStore.birds.map(bird => (\n\t\t\t\t\t<li key={ bird } style={ { background: color } }>{ bird }</li>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}))\n","import React from 'react';\nimport { configure } from 'mobx';\nimport { Provider } from \"mobx-react\";\n\nimport { Counter, counterState } from \"../mini-examples/1.Counter\";\nimport TodoComponent from \"../mini-examples/1.HelloTwoStore\";\nimport { NameCounter, nameStore } from \"../mini-examples/2.NameCounter\";\nimport { appStore, Controls, TableControls } from \"../mini-examples/3.TableControlsAsync\";\nimport { AnimalCounter, giraffe } from \"../mini-examples/4.AnimalAutorun\";\nimport { BooksContainer, booksStore } from \"../mini-examples/5.BookInject\";\nimport { Birds, singletonBird } from \"../mini-examples/5.BirdInject\";\nimport { Home, store, StoreProvider, Username } from \"../mini-examples/6.StoreContext\";\n\n\nconfigure({ enforceActions: 'observed' });\n\n\nconst ExamplesContainer = () => {\n\treturn (\n\t\t<div className=\"examples\">\n\t\t\t<Counter store={ counterState } />\n\t\t\t<TodoComponent />\n\t\t\t<NameCounter name={ nameStore } />\n\t\t\t\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<Controls store={ appStore } />\n\t\t\t<TableControls store={ appStore } />\n\t\t\t\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<AnimalCounter animalStore={ giraffe }/>\n\t\t\t\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<Provider\n\t\t\t\tbooksStore={ booksStore }\n\t\t\t\tBirdStore={ singletonBird } color={ \"orange\" }\n\t\t\t>\n\t\t\t\t<BooksContainer />\n\t\t\t\t\n\t\t\t\t<hr/>\n\t\t\t\t\n\t\t\t\t<Birds />\n\t\t\t</Provider>\n\t\t\t\n\t\t\t<StoreProvider store={ store }>\n\t\t\t\t<Home />\n\t\t\t\t\n\t\t\t\t<hr/>\n\t\t\t\t\n\t\t\t\t<Username />\n\t\t\t</StoreProvider>\n\t\t</div>\n\t);\n}\n\n\nexport default ExamplesContainer;\n","import { createContext, useContext } from 'react';\n\n\nexport const StoreContext = createContext({});\nexport const StoreProvider = StoreContext.Provider;\n\nexport const useStore = () => useContext(StoreContext);\n","export const onEnterPress = (callback) => {\n\treturn (event) => {\n\t\tif (event.key === 'Enter') {\n\t\t\tcallback();\n\t\t}\n\t}\n};\n","import React, { useState } from 'react';\nimport { onEnterPress, useStore } from \"../helpers\";\n\n\nexport const TodoNew = () => {\n\tconst todoListStore = useStore();\n\t\n\tconst [ todo, setTodo ] = useState('');\n\t\n\t\n\tconst addTodo = () => {\n\t\ttodoListStore.addTodo(todo);\n\t\t\n\t\tsetTodo('');\n\t};\n\t\n\treturn (\n\t\t<div className=\"add\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"add\"\n\t\t\t\tplaceholder=\"Add item...\"\n\t\t\t\tvalue={ todo }\n\t\t\t\tonKeyDown={ onEnterPress(addTodo) }\n\t\t\t\tonChange={ (e) => setTodo(e.target.value) }\n\t\t\t/>\n\t\t\t\t<div className=\"input-buttons\" onClick={ addTodo }>\n\t\t\t\t\t<button className=\"add-todo\">\n\t\t\t\t\t\t<i className=\"fas fa-plus add plus-icon\"/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n};\n","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport { TodoItem } from \"./index\";\nimport { useStore } from \"../helpers\";\n\n\nexport const TodoList = observer(() => {\n\tconst todoListStore = useStore();\n\t\n\treturn (\n\t\t<div className=\"todo-list\">\n\t\t\t<ul className=\"open-todos todos align\">\n\t\t\t\t<span>Open Todos</span>\n\t\t\t\t{\n\t\t\t\t\ttodoListStore.openTodos.map(todo =>\n\t\t\t\t\t\t<TodoItem key={ todo.id } todo={ todo } />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</ul>\n\t\t\t<ul className=\"finished-todos todos align\">\n\t\t\t\t<span>Finished Todos</span>\n\t\t\t\t{\n\t\t\t\t\ttodoListStore.finishedTodos.map(todo =>\n\t\t\t\t\t\t<TodoItem key={ todo.id } todo={ todo } />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t)\n});","import React, { useState } from 'react';\nimport { useStore, onEnterPress } from \"../helpers\";\n\n\nexport const TodoItem = (props) => {\n\tconst { todo } = props;\n\t\n\tconst todoListStore = useStore();\n\t\n\tconst [ text, setText ] = useState(todo.text);\n\tconst [ edit, setEdit ] = useState(false);\n\t\n\tconst handleChange = (event) => setText(event.target.value)\n\t\n\tconst saveText = () => {\n\t\ttodo.updateText(text);\n\t\t\n\t\tsetEdit(false);\n\t};\n\t\n\treturn (\n\t\t<div className=\"todo-item\">\n\t\t\t{\n\t\t\t\tedit\n\t\t\t\t\t? <li className=\"edit-item\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonKeyDown={ onEnterPress(saveText) }\n\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\tdefaultValue={ text }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<i className=\"far fa-save save\" onClick={ saveText }/>\n\t\t\t\t\t</li>\n\t\t\t\t\t: <li>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tid={`todo_${ todo.id }`}\n\t\t\t\t\t\t\tdefaultChecked={ todo.isDone }\n\t\t\t\t\t\t\tonChange={ todo.toggleIsDone }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor={`todo_${ todo.id }`}>\n\t\t\t\t\t\t\t<span className=\"check\" />\n\t\t\t\t\t\t\t{ todo.text }\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"todo-buttons\">\n\t\t\t\t\t\t\t<i className=\"far fa-edit edit\" onClick={ () => setEdit(true) }/>\n\t\t\t\t\t\t\t<i className=\"far fa-trash-alt delete\" onClick={ () => todoListStore.removeTodo(todo) }/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t}\n\t\t</div>\n\t)\n};\n","import { action, makeObservable, observable } from \"mobx\";\nimport { randomId } from \"../helpers\";\n\n\nexport default class TodoItemStore {\n\tconstructor(text) {\n\t\tthis.text = text;\n\t\tthis.isDone = false;\n\t\tthis.id = randomId();\n\t\t\n\t\tmakeObservable(this, {\n\t\t\tid: observable,\n\t\t\ttext: observable,\n\t\t\tisDone: observable,\n\t\t\t\n\t\t\ttoggleIsDone: action,\n\t\t\tupdateText: action\n\t\t});\n\t}\n\t\n\ttoggleIsDone = () => {\n\t\tthis.isDone = !this.isDone\n\t}\n\t\n\tupdateText = (text) => {\n\t\tthis.text = text;\n\t}\n}\n","export const randomId = () => {\n\treturn '_'\n\t\t+ (Date.now().toString(36)\n\t\t\t+ Math.random().toString(36).substr(2, 9))\n\t\t\t.toUpperCase()\n};\n","import React from 'react';\n\nimport { TodoNew, TodoList } from \"../components\";\n\nimport { StoreProvider } from \"../helpers\";\nimport TodoListStore from \"../store/todo-list.store\";\n\n\n\nconst todoListStore = new TodoListStore([\n\t\"Should Writing in JS\",\n\t\"Should Writing in React\",\n\t\"Should Learn Redux\",\n\t\"Should Learn MobX\",\n\t\"Should Watch 'Blade Runner 2049'\",\n\t\"Should Play on 'Stronghold'\"\n]);\n\nconst TodoContainer = () => {\n\treturn (\n\t\t<StoreProvider value={ todoListStore }>\n\t\t\t<div className=\"todoList\">\n\t\t\t\t<TodoNew />\n\t\t\t\t<TodoList />\n\t\t\t</div>\n\t\t</StoreProvider>\n\t);\n}\n\n\nexport default TodoContainer;","import { action, computed, makeObservable, observable } from \"mobx\";\nimport TodoItemStore from \"./todo-item.store\";\n\nexport default class TodoListStore {\n\tconstructor(todos) {\n\t\tthis.list = [];\n\t\ttodos.forEach(this.addTodo);\n\t\t\n\t\tmakeObservable(this, {\n\t\t\tlist: observable.shallow,\n\t\t\t\n\t\t\taddTodo: action,\n\t\t\tremoveTodo: action,\n\t\t\t\n\t\t\tfinishedTodos: computed,\n\t\t\topenTodos: computed,\n\t\t});\n\t}\n\t\n\taddTodo = (text) => {\n\t\tthis.list.push(new TodoItemStore(text));\n\t}\n\t\n\tremoveTodo = (todo) => {\n\t\tconst indexTodo = this.list.indexOf(todo);\n\t\t\n\t\tthis.list.splice(indexTodo, 1);\n\t};\n\t\n\tget finishedTodos() {\n\t\treturn this.list.filter(todo => todo.isDone);\n\t}\n\t\n\tget openTodos() {\n\t\treturn this.list.filter(todo => !todo.isDone);\n\t}\n}","import React from 'react';\nimport { TodoContainer, ExamplesContainer } from \"./containers\";\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TodoContainer />\n  \n      {/*<ExamplesContainer />*/}\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}